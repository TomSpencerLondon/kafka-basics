<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b44ddce7-6edc-4264-bf3e-b0f30d3f62da" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "contexts": [
    {
      "name": "minikube",
      "originalNamespace": "default"
    }
  ],
  "isMigrated": true
}]]></component>
  <component name="KubernetesSettings">
    <option name="contextName" value="minikube" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "associatedIndex": 6
}]]></component>
  <component name="ProjectId" id="2qQTzaXjW9P3MzrYa6Jz45acicK" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yml.kafka: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.zookeeper: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "JUnit.ProcessingServiceApplicationTests.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "Spring Boot.OrderServiceApplication.executor": "Debug",
    "jdk.selected.JAVA_MODULE": "graalvm-21",
    "kotlin-language-version-configured": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="JUnit.ProcessingServiceApplicationTests">
    <configuration default="true" type="AZURE_FUNCTION_SUPPORT" factoryName="Run Functions">
      <option name="appName" />
      <option name="appServicePlanName" />
      <option name="appServicePlanResourceGroup" />
      <option name="appSettingsKey" value="d1561d23-7730-4085-a059-ab43d6b4f93e" />
      <option name="artifact" />
      <option name="debugOptions" />
      <option name="deployment" />
      <option name="deploymentStagingDirectoryPath" />
      <option name="funcPath" />
      <option name="functionHostArguments" />
      <option name="hostJsonPath" />
      <option name="insightsName" />
      <option name="instrumentationKey" />
      <option name="javaVersion" />
      <option name="localSettingsJsonPath" />
      <option name="moduleName" />
      <option name="os" />
      <option name="pricingTier" />
      <option name="providerMap">
        <map />
      </option>
      <option name="region" />
      <option name="resourceGroup" />
      <option name="stagingFolder" />
      <option name="subscription" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProcessingServiceApplicationTests" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="processing-service" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.processingservice.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="org.example.processingservice" />
      <option name="MAIN_CLASS_NAME" value="org.example.processingservice.ProcessingServiceApplicationTests" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="order-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.orderservice.OrderServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProcessingServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="processing-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="org.example.processingservice.ProcessingServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.kafka: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="kafka" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.zookeeper: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="zookeeper" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.ProcessingServiceApplicationTests" />
        <item itemvalue="Docker.docker-compose.yml.kafka: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.zookeeper: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b44ddce7-6edc-4264-bf3e-b0f30d3f62da" name="Changes" comment="" />
      <created>1734594063122</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1734594063122</updated>
      <workItem from="1734594064618" duration="10116000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/order-service/src/main/java/org/example/orderservice/KafkaConfigLogger.java</url>
          <line>21</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>